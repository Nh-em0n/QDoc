
	<sn><md>## Viewing the history{.fg-red .text-center}

Git provides powerful commands to explore the history of your repository. Understanding `git log`, how to view the **current HEAD**, and options like **one-time** and **reverse** helps in managing and navigating commits effectively.

</md></sn>
		
	<config>
		<tags>#14.viewing history</tags>
		<thumbnail></thumbnail>
		<heading></heading>
		<udate>Fri Sep 05 2025 01:19:00 GMT+0600 (Bangladesh Standard Time)</udate>
		<id>article-B1340C4m7m</id>
		<duration></duration>
	</config>
<sn><md>### Git Log{.text-center}

`git log` is the primary command to view the commit history of your repository. By default, it shows commits in reverse chronological order (most recent first).

![diagram](https://raw.githubusercontent.com/Nh-em0n/QDoc/main/Programming/mGit/media/git-commit-diagram.svg)

```bash
$ git log
```

This displays:

* Commit hash
* Author
* Date
* Commit message

**Example Output:**

```
commit 3f6e2d3
Author: John Doe john@example.com
Date:   Wed Sep 4 12:34:56 2025 +0600

    Added new feature X
```</md></sn>
<sn><md>### Current HEAD{.text-center}

**HEAD** refers to the latest commit in the currently checked-out branch. To see it:

```bash
$ git log -1
```

Or, you can use:

```bash
$ git show HEAD
```

This shows details of the current commit at HEAD.
</md></sn>
<sn><md>### One-Time Viewing of Log{.text-center}

Git allows you to view a log **once** without scrolling indefinitely using `--oneline`. This is useful for a compact summary:

```bash
$ git log --oneline
```

**Example Output:**

```
3f6e2d3 Added new feature X
2d4f1a1 Fixed bug Y
1a2b3c4 Initial commit
```

* Each commit is shown in **short hash + message** format.
* Ideal for quickly scanning commits.
</md></sn>
<sn><md>### Reverse Order Log{.text-center}

By default, `git log` shows the most recent commit first. You can reverse the order using `--reverse`:

```bash
$ git log --reverse
```

This will display commits from **oldest to newest**, helpful when you want to see the project history from the beginning.
</md></sn>
<sn><md>### Combining Options{.text-center}

You can combine options like `--oneline` and `--reverse`:

```bash
$ git log --oneline --reverse
```

This gives a **compact, oldest-to-newest commit view**:

```
1a2b3c4 Initial commit
2d4f1a1 Fixed bug Y
3f6e2d3 Added new feature X
```
</md></sn>
<sn><md>### Summary Table {.text-center}

| Command                       | Purpose                               |
| ----------------------------- | ------------------------------------- |
| `git log`                     | View full commit history              |
| `git show HEAD`               | Show details of current HEAD commit   |
| `git log -1`                  | View only the latest commit           |
| `git log --oneline`           | Compact, single-line commit history   |
| `git log --reverse`           | Show commits from oldest to newest    |
| `git log --oneline --reverse` | Compact history from oldest to newest |
</md></sn><sn><md>## Practices {.text-center}

+++ see

#### Checking Status

```bash
$ git status
On branch master
nothing to commit, working tree clean
```

#### Checking Commit History

```bash
$ git log
commit 604cfb0df6481eafa4dea8ccbc60b43cfc7435cb (HEAD -&gt; master)
Author: Nh-em0n nhemon2043@gmail.com
Date:   Fri Sep 5 00:50:02 2025 +0600

    update file2

commit 613e2b919ac0fa1042cb87bb64c68f50aac5e5bf
Author: Nh-em0n nhemon2043@gmail.com
Date:   Thu Sep 4 21:39:15 2025 +0600

    update note content

commit 1c07c60fcccdc4c245c7650cca3ef289a739c1a1
Author: Nh-em0n nhemon2043@gmail.com
Date:   Thu Sep 4 21:12:42 2025 +0600

    Update file1

    I just add some new content to the note
```

Press <kbd>Space</kbd> to view more...


#### Getting Commit List in Short Form

```bash
$ git log --oneline
604cfb0 (HEAD -&gt; master) update file2
613e2b9 update note content
1c07c60 Update file1
c2e0a9b remove a.temp
69f3b68 add .gitignore
6dcc1e7 create a temp file in temp folder
86a240e change file1 extension to md
7b2e050 Add two note file again
23088c4 remove file1
839814d remove file2
5ebf799 update note2
1656114 Initial Commit
```

#### Getting Commit List in Chronological Order

```bash
$ git log --oneline --reverse
1656114 Initial Commit
5ebf799 update note2
839814d remove file2
23088c4 remove file1
7b2e050 Add two note file again
86a240e change file1 extension to md
6dcc1e7 create a temp file in temp folder
69f3b68 add .gitignore
c2e0a9b remove a.temp
1c07c60 Update file1
613e2b9 update note content
604cfb0 (HEAD -&gt; master) update file2
```
+++</md></sn>
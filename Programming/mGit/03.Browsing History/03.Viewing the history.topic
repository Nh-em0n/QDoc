
	<sn><md>## Viewing the History in Git{.text-center}

Understanding the history of a project is one of the most important aspects of version control. Git provides powerful tools to inspect and analyze the history of changes made to a repository. The primary command for this purpose is `git log`.

---

### The `git log` Command

`git log` displays the commit history of a repository. Each entry in the log corresponds to a **commit** that was made in the past. Commits appear in **reverse chronological order** â€” the most recent commit appears first, followed by earlier commits.

</md></sn>		
	<config>
		<tags>#03.viewing the history</tags>
		<thumbnail></thumbnail>
		<heading></heading>
		<udate>Wed Sep 17 2025 17:36:53 GMT+0600 (Bangladesh Standard Time)</udate>
		<id>article-36acVXycLf</id>
		<duration></duration>
	</config>
<sn><md>### Structure of an Individual Commit{.text-center}

When you run `git log` without any options, you will see details of each commit in the following structure:

```bash
commit 7c9e42c5d9f1d28d1aef88d7bc0f99e6c45a2f63
Author: John Doe john@example.com
Date:   Mon Sep 16 12:45:32 2025 +0600

    Added new feature to handle user input
```

#### Breakdown:{.text-end}

* **Commit hash**: A unique SHA-1 identifier (e.g., `7c9e42c5...`) for the commit.
* **Author**: The person who made the changes.
* **Date**: When the commit was created.
* **Commit message**: A description of the changes introduced in this commit.</md></sn>
<sn><md>In JavaScript, the `Map` class (or more accurately, the `Map` object) is a built-in data structure that allows you to store key-value pairs where keys can be of any type (not just strings or symbols, unlike regular objects).

### ðŸ”¹ Creating a Map

```javascript
const myMap = new Map();
```

### ðŸ”¹ Setting Values

```javascript
myMap.set('name', 'Alice');
myMap.set(42, 'The answer');
myMap.set(true, 'Boolean key');
```

### ðŸ”¹ Getting Values

```javascript
console.log(myMap.get('name'));    // "Alice"
console.log(myMap.get(42));        // "The answer"
console.log(myMap.get(true));      // "Boolean key"
```

### ðŸ”¹ Checking for a Key

```javascript
console.log(myMap.has('name'));    // true
console.log(myMap.has('age'));     // false
```

### ðŸ”¹ Deleting a Key

```javascript
myMap.delete(42);
```

### ðŸ”¹ Map Size

```javascript
console.log(myMap.size);  // 2
```

### ðŸ”¹ Iterating Over a Map

```javascript
// Keys
for (let key of myMap.keys()) {
  console.log(key);
}

// Values
for (let value of myMap.values()) {
  console.log(value);
}

// Entries
for (let [key, value] of myMap.entries()) {
  console.log(`${key}: ${value}`);
}
```

### ðŸ”¹ Chaining `set()` Calls

```javascript
myMap.set('a', 1).set('b', 2).set('c', 3);
```

### ðŸ”¹ Clearing a Map

```javascript
myMap.clear();  // Removes all key-value pairs
```

### ðŸ”¹ Map vs Object

| Feature     | `Map`                                   | `Object`                      |
| ----------- | --------------------------------------- | ----------------------------- |
| Key Types   | Any type                                | Strings and Symbols only      |
| Key Order   | Ordered (insertion order)               | Unordered (ES6+ keeps order)  |
| Performance | Better for frequent additions/deletions | Good for static data          |
| Iteration   | Easier and more consistent              | Requires `Object.keys()`, etc |

</md></sn><config style="display:none"><tags>#temp</tags><thumbnail></thumbnail><heading></heading><udate>Fri Jun 20 2025 18:18:06 GMT+0600 (Bangladesh Standard Time)</udate><id>article-1SoF8dA1fO</id><duration></duration></config><sn class="col-md-11 col-lg-9 content-section"><h2 class="text-center text-info">Iterating Over Map Data</h2><pre class="copy-container undefined d-none" data-v="javascript"><header class="lock-select"><span>javascript</span><i class="fa-light fa-clipboard copy-btn lock-select"></i></header><code class="language-javascript copy-text hljs"><span class="hljs-comment">// Keys</span>
<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">of</span> myMap.<span class="hljs-title function_">keys</span>()) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(key);
}

<span class="hljs-comment">// Values</span>
<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> value <span class="hljs-keyword">of</span> myMap.<span class="hljs-title function_">values</span>()) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(value);
}

<span class="hljs-comment">// Entries</span>
<span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> [key, value] <span class="hljs-keyword">of</span> myMap.<span class="hljs-title function_">entries</span>()) {
  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">${key}</span>: <span class="hljs-subst">${value}</span>`</span>);
}
</code></pre></sn>
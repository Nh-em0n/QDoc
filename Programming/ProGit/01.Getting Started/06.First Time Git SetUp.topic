<config style="display:none"><tags>#06.first time git setup</tags><thumbnail></thumbnail><heading></heading><udate>Thu Jul 10 2025 09:04:40 GMT+0600 (Bangladesh Standard Time)</udate><id>article-J9WTvNuOam</id><duration></duration></config><sn class="bar bar-teal"><h2>First-Time Git Setup</h2><p>Now that you have Git on your system, youâ€™ll want to do a few things to <strong>customize your Git environment</strong>.
You should have to do these things only once on any given computer â€” theyâ€™ll stick around between upgrades.
You can also change them at any time by running through the commands again.</p><p>Git comes with a tool called <code>git config</code> that lets you <strong>get and set configuration variables</strong> that control all aspects of how Git looks and operates.
These variables can be stored in <strong>three different places</strong>:</p></sn><sn class="col-12 col-md-10 col-lg-10 col-xl-10 col-xxl-9 p-0 p-md-3 p-lg-5 ignore bar-indigo bar"><h3>Configuration Levels</h3><tb class="py-2"><pre>| <strong>Scope</strong> | <strong>Description</strong> | <strong>Example Path</strong> | <strong>Example</strong> |
| ---  | ---  | ---  | --- |
| <strong>System</strong> | Applies to all users and all repositories on the system | <code>C:/Program Files/Git/etc/gitconfig</code> | <im>https://i.imgur.com/7yCx0q2.png^^file:C:/Program Files/Git/etc/gitconfig</im> |
| <strong>Global</strong> | Applies to a specific user across all repositories | <code>C:/Users/UserName/.gitconfig</code> | <im>https://i.imgur.com/5V0wVwE.png^^file:C:/Users/Emon/.gitconfig</im> |
| <strong>Repository</strong> | Applies to one specific repository only | <code>.git/config</code> in the root of a Git repo | <im>https://i.imgur.com/4jMuu4O.png^^C:\Users\Emon\git_practise.git\config</im> |
</pre></tb></sn><sn class="bar bar-pink"><h3>Your Default Branch Name</h3><p>By default, Git will create a branch called <code>master</code> when you run <code>git init</code>.</p><p>From <strong>Git version 2.28</strong> onwards, you can <strong>set a different name</strong> for the initial branch.</p><p>To set <code>main</code> as the default branch name:</p><pre data-v="bash">$ git config --global init.defaultBranch main
</pre></sn><sn class="bar"><h3>Checking Your Settings</h3><p>To <strong>list all current Git settings</strong>, run:</p><pre data-v="bash">$ git config --list
</pre><p>Example output:</p><pre data-v="plaintext">user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
</pre><p>&gt; You may see keys more than once, because Git reads the same key from different files (<code>[path]/etc/gitconfig</code>, <code>~/.gitconfig</code>, etc.).
&gt; Git uses the <strong>last value</strong> it finds for each unique key.</p><p>To check what Git thinks a specific key's value is:</p><pre data-v="bash">$ git config user.name
</pre><p>Output:</p><pre data-v="plaintext">John Doe
</pre><p>&gt; ðŸ’¡ Since Git might read the same configuration variable value from more than one file, you may get an <strong>unexpected value</strong>.
&gt; In such cases, you can query Git for the <strong>origin</strong> of that value:</p><pre data-v="bash">$ git config --show-origin user.name</pre><p>Example output:</p><pre data-v="plaintext">file:C:/Users/Emon/.gitconfig   Nh-emon</pre></sn>
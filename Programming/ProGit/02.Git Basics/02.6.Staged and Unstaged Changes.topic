<sn><md>## Viewing Your Staged and Unstaged Changes
---


#### When `git status` Isn’t Enough

While `git status` shows **which** files have changed, it doesn’t show **how** they’ve changed. To view the specific line-by-line changes in your files, use the `git diff` command. This command helps answer:

* What have you changed but **not yet staged**?
* What have you staged that is ready to be **committed**?

#### Unstaged Changes: `git diff`

If you want to see what’s changed in your working directory that hasn’t been staged yet:

```bash
$ git diff
```

Example:

```bash
$ git diff
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 8ebb991..643e24f 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -65,7 +65,8 @@
Please include a nice description of your changes when you submit your PR;
if we have to read the whole diff to figure out why you're contributing
in the first place, you're less likely to get feedback and have your change
-merged in.
+merged in. Also, split your changes into comprehensive chunks if your patch is
+longer than a dozen lines.
```

This shows exactly what lines were added or removed compared to the last staged snapshot.

#### Staged Changes: `git diff --staged` or `git diff --cached`

To see what’s been staged (and will go into the next commit):

```bash
$ git diff --staged
```

or

```bash
$ git diff --cached
```

Example:

```bash
$ git diff --staged
diff --git a/README b/README
new file mode 100644
index 0000000..03902a1
--- /dev/null
+++ b/README
@@ -0,0 +1 @@
+My Project
```

&gt; If all changes are staged, running `git diff` will return no output, because there’s nothing left unstaged.

### Seeing Both Staged and Unstaged Changes in the Same File

Let’s say you stage a file, then edit it again:

```bash
$ git add CONTRIBUTING.md
$ echo '# test line' &gt;&gt; CONTRIBUTING.md
```

Now run:

```bash
$ git status
```

```
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  modified: CONTRIBUTING.md
Changes not staged for commit:
  modified: CONTRIBUTING.md
```

Now view the unstaged change:

```bash
$ git diff
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 643e24f..87f08c8 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -119,3 +119,4 @@
## Starter Projects
See our [projects list](https://github.com/libgit2/libgit2/blob/development/PROJECTS.md).
+# test line
```

And view the staged change:

```bash
$ git diff --cached
diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md
index 8ebb991..643e24f 100644
--- a/CONTRIBUTING.md
+++ b/CONTRIBUTING.md
@@ -65,7 +65,8 @@
Please include a nice description of your changes when you submit your PR;
if we have to read the whole diff to figure out why you're contributing
in the first place, you're less likely to get feedback and have your change
-merged in.
+merged in. Also, split your changes into comprehensive chunks if your patch is
+longer than a dozen lines.
```

#### Viewing Diffs in an External Tool: `git difftool`

You can use external tools for a graphical diff view:

```bash
$ git difftool
```

To see what tools are available:

```bash
$ git difftool --tool-help
```

Tools may include:

* `vimdiff`
* `meld`
* `kdiff3`
* `emerge`
* Commercial apps

These external tools provide more visual comparisons, which can be easier to work with than raw terminal diffs.
</md></sn><config style="display:none"><tags>#02.6.stages and unstages changes</tags><thumbnail></thumbnail><heading></heading><udate>Mon Jun 02 2025 08:11:49 GMT+0600 (Bangladesh Standard Time)</udate><id>article-6aCAcorCcf</id><duration></duration></config>
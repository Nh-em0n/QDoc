<sn><md>## Ignoring Files
---

#### Purpose of `.gitignore`

In many projects, there are files you don't want Git to track—such as:

* Automatically generated files (e.g., logs, build outputs)
* Temporary or editor-specific files

To prevent Git from showing these as untracked or accidentally adding them, use a `.gitignore` file with pattern rules to specify which files or directories should be ignored.

#### Example `.gitignore` File

```bash
$ cat .gitignore
*.[oa]
*~
```

* `*.[oa]` — Ignores files ending in `.o` or `.a` (object and archive files)
* `*~` — Ignores files ending in `~` (temporary files created by editors like Emacs)

Other common entries include:

* `log/`, `tmp/`, `*.pid` — Log and temp directories, PID files
* `*.log`, `*.tmp`, `*.swp` — Editor and build leftovers

Setting up `.gitignore` early helps avoid committing unwanted files.

#### `.gitignore` Pattern Rules

##### Basic Rules

* Blank lines or lines starting with `#` are ignored (comments)
* Patterns use **glob syntax** and apply **recursively**
* Prefixing a pattern with `/` makes it relative to the `.gitignore` location
* Ending with `/` specifies a directory
* Prefixing with `!` negates a pattern (excludes it from being ignored)

##### Glob Syntax Overview

* `*` — Matches 0 or more characters
* `?` — Matches a single character
* `[abc]` — Matches any of the listed characters
* `[0-9]` — Matches any digit from 0 to 9
* `**` — Matches directories recursively

#### Advanced Example

```bash
# Ignore all .a files
*.a

# But track lib.a even though .a files are ignored
!lib.a

# Ignore TODO only in the root directory
/TODO

# Ignore all files in any build directory
build/

# Ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt

# Ignore all PDFs in doc/ and its subdirectories
doc/**/*.pdf
```

#### Repository-Wide vs. Directory-Specific `.gitignore`

* A `.gitignore` in the root applies **recursively** to all subdirectories.
* You can also create `.gitignore` files **in subdirectories** to apply rules only to that folder and its children.

&gt; Example: The Linux kernel repo has over 200 `.gitignore` files scoped to individual folders.

For deeper customization and rules, refer to the manual:

```
man gitignore
```

Or explore community-maintained templates for various languages and tools:

**GitHub’s `.gitignore` collection**:
[https://github.com/github/gitignore](https://github.com/github/gitignore)
</md></sn><config style="display:none"><tags>#02.5.ignoring files</tags><thumbnail></thumbnail><heading></heading><udate>Mon Jun 02 2025 08:10:27 GMT+0600 (Bangladesh Standard Time)</udate><id>article-xQ6DcZEYbG</id><duration></duration></config>